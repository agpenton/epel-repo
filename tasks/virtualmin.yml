---

- name: ensure perl-Crypt-SSLeay present
  yum: name=perl-Crypt-SSLeay state=present

- name: set hostname
  hostname:
        name="{{ inventory_hostname }}"

# - name: set fqdn
#   lineinfile: dest=/etc/hosts regexp='.*{{ item }}$' line="{{ hostvars[item].ansible_default_ipv4.address }} {{item}}" state=present
#   when: hostvars[item].ansible_default_ipv4.address is defined
#   with_items: " {{ groups['all'] }}"

# - name: copy modified install script
#   copy: src=install.sh dest=/root/install.sh

# - name: virtualmin install executable
#   file: path=/root/install.sh mode=0755

# - name: virtualmin install (~10 mins) track via $ sudo tail -f /root/virtualmin-install.log
#   script: ~/install.sh --yes
#   args:
#   creates: /root/virtualmin-install.log

# # - name: Wait until the file /etc/httpd/conf/httpd.conf is present before continuing
# #   wait_for:
# #     path: /etc/httpd/conf/httpd.conf
# - name: Wait until the string "completed" is in the file /root/virtualmin-install.log before continuing
#   wait_for:
#         timeout: 900
#         path: "/root/virtualmin-install.log"
#         search_regex: 'Installation Complete'
####################################################################
# New Version of virtualmin install
####################################################################
- name: Check if webmin is running
    # shell: ps aux | grep webmin | grep -v grep
  command: ps aux | grep webmin | grep -v grep
  ignore_errors: yes
  changed_when: false
  register: service_webmin_status

- name: Report status of Apache
  fail:
    msg: |
      Service apache2 is not running.
      Return code from `grep`:
      {{ service_apache_status.rc }}
  when: service_webmin_status.rc != 0

- name: download virtualmin install script
  tags: webmin
  get_url: >
    url=http://software.virtualmin.com/gpl/scripts/install.sh
    dest=/root/install.sh
    mode=0755

- name: virtualmin install (~10 mins) track via $ sudo tail -f /root/virtualmin-install.log
  shell: ~/install.sh --yes chdir=/root
  when: service_webmin_status.rc != 0

- name: Virtualmin Post-Installation Wizard
  pause: prompt="virtualmin ready for post-installation, visit - https://{{inventory_hostname}}:10000"

# - name: apache2 listen on port 8080
- name: apache2 listen on port 8080
  lineinfile: dest=/etc/httpd/conf/httpd.conf regexp='^Listen 80' line="Listen 8080" state=present
  ignore_errors: true
  notify:
        - restart httpd

# - name: apache2 SSL on port 7443
# - name: apache2 listen on port 8080
#   shell: sed -i '5s/443/7443/' /etc/httpd/conf.d/ssl.conf
#   warn: no
#   ignore_errors: True
# # - lineinfile:
# #     path: /etc/httpd/conf.d/ssl.conf # required. The file to modify.,Before 2.3 this option was only usable as I(dest), I(destfile) and I(name).
# #     regexp: ^Listen 443 # not required. The regular expression to look for in every line of the file. For C(state=present), the pattern to replace if found. Only the last line found will be replaced. For C(state=absent), the pattern of the line(s) to remove. Uses Python regular expressions. See U(http://docs.python.org/2/library/re.html).
# #     state: present # not required. choices: absent;present. Whether the line should be there or not.
# #     line: Listen 7443 # not required. Required for C(state=present). The line to insert/replace into the file. If C(backrefs) is set, may contain backreferences that will get expanded with the C(regexp) capture groups if the regexp matches.
# # lineinfile: dest=/etc/httpd/conf.d/ssl.conf regexp="^Listen 443" line="Listen 8080" state=present
#   notify:
#   - restart httpd

# - handlers:
#   - name: restart httpd
#     service: name=httpd state=restarted
- name: Virtualmin on port 12345.
  lineinfile: dest=/etc/webmin/miniserv.conf regexp="^port=10000" line="port=12345" state=present
  ignore_errors: true
  notify:
        - restart webmin
# - name: changing Webmin port
#   shell: sed -i 's/^[#]*port=.*/port=12345/g' /etc/webmin/miniserv.conf
#   warn: no
#   ignore_errors: True
#   notify:
#     - restart webmin
